### oh-my-zsh {{{
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="cloud"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# plugins=(gitfast git-extras vagrant brew ruby knife brew-cask mvn grunt svn lein)
plugins=(git gitfast git-extras vagrant brew brew-cask mvn grunt svn lein zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
# }}}

### Global {{{

# Set locale in case
if [[ -z $LANG ]]; then
    echo "Warning: \$LANG is not set in profile."
    export LANG="en_US.UTF-8"
    export LC_ALL="en_US.UTF-8"
fi

# }}}

# functions {{{
run_if_script_exist() {
    if [[ -e $1 ]]; then
        source $1
    fi
}
# }}}

### Environment {{{
export EDITOR="vim"
# }}}

### History {{{
HISTFILE=~/.zsh_history
HISTSIZE=20000
SAVEHIST=20000
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt share_history
# }}}

### PATH {{{
# add script dir
export PATH="$PATH:$HOME/scripts"

# Homebrew
if hash brew &>/dev/null; then
    # add brew bin path
    export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

    # set root Application as default target
    export HOMEBREW_CASK_OPTS="--appdir=/Applications"
fi

# Basher
# add basher bin path no matter if basher is installed
export PATH="$HOME/.basher/bin:$PATH"
if hash basher &>/dev/null; then
    # initialize basher
    eval "$(basher init -)"
fi

# Virtualenv Loading
run_if_script_exist $HOME/.virtualenv_profile
# }}}

### Alias {{{
# Regular Alias
alias -r ll="ls -lAh"
alias -r la="ls -aTlFh"
alias -r lr="ls -Rlh"
alias -r lR="ls -RAlh"
alias -r diff="diff -u"
alias -r stat="stat -x"

# Git Alias
alias -r gd="git diff"
alias -r gds="git diff --staged"

# Less Alias
alias -r less="less -i" # case-insensitive

# Tig Alias
alias -r tia="tig --all"
alias -r tis="tig status"

# Global Alias
alias -g /J='| json'
alias -g /L='| less'
alias -g /H='| head'
alias -g /T='| tail'
alias -g /G='| grep'
alias -g /A="&& terminal-notifier -message 'done'"

# Fixture Alias
alias -r ssh="TERM=xterm ssh"

# VSCode
function code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $*; }
# }}}

### Key binding {{{

# use pattern in history search
bindkey "^R" history-incremental-pattern-search-backward
bindkey "^S" history-incremental-pattern-search-forward

#}}}

### Utils {{{

# Insert Unicode Character
autoload insert-unicode-char
zle -N insert-unicode-char
bindkey '^Xi' insert-unicode-char

# Load Utils Scripts
if [[ -d $HOME/extensions ]]; then
    for f in $(find -L $HOME/extensions -type f -name '*.sh')
    do
        source $f
    done
fi
# }}}

### App Init {{{

# Docker (for mac only)
if hash docker-machine &>/dev/null; then
    if [[ $(docker-machine status default) == "Running" ]]; then
        eval "$(docker-machine env default)"
    fi
fi

# fasd
if hash fasd &>/dev/null; then
    eval "$(fasd --init auto)"
    v() {
        vim $(fasd -sif $1)
    }
fi

# thefuck
if hash thefuck &>/dev/null; then
    eval "$(thefuck --alias)"
fi

# zaw
run_if_script_exist $HOME/Workspace/zaw/zaw.zsh

run_if_script_exist $HOME/.iterm2_shell_integration.zsh
# }}}

### Completion {{{
if [ -f $(brew --prefix)/share/zsh-completions ]; then
    fpath=($(brew --prefix)/share/zsh-completions $(brew --prefix)/share/zsh/site-functions $fpath)
fi
# }}}

### Extra Config {{{
if [[ -d $HOME/.shrc_d ]]; then
    for rc in $HOME/.shrc_d/*
    do
        if [[ -f $rc ]]; then
            . $rc
        fi
    done
fi
# }}}

# vim: set foldmarker={{{,}}} foldlevel=0 foldmethod=marker spell:
