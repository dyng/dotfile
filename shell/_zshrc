### oh-my-zsh {{{
### DEPRECATED ###
ZSH=$HOME/.oh-my-zsh
CASE_SENSITIVE="false"
DISABLE_AUTO_UPDATE="true"
COMPLETION_WAITING_DOTS="true"
# }}}

### Workaround Websense {{{
if [[ -e /usr/local/bin/git ]]; then
    alias git=/usr/local/bin/git
fi
# }}}

### zplug {{{
export ZPLUG_HOME=$HOME/.zplug

# Install zplug if necessary
if [[ ! -d $ZPLUG_HOME ]]; then
    git clone https://github.com/zplug/zplug $ZPLUG_HOME
fi

# Init
source $ZPLUG_HOME/init.zsh

setopt prompt_subst

# enable bash-compatible completion
autoload bashcompinit
bashcompinit

zplug "lib/completion", from:oh-my-zsh
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/gitfast", from:oh-my-zsh
zplug "plugins/git-extras", from:oh-my-zsh
zplug "plugins/brew", from:oh-my-zsh
zplug "plugins/mvn", from:oh-my-zsh
zplug "plugins/grunt", from:oh-my-zsh
zplug "plugins/svn", from:oh-my-zsh
zplug "plugins/lein", from:oh-my-zsh
zplug "plugins/virtualenv", from:oh-my-zsh
zplug "supercrabtree/k"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting"
zplug "caiogondim/bullet-train-oh-my-zsh-theme", use:bullet-train.zsh-theme, defer:2
zplug "djui/alias-tips"
zplug "zsh-users/zsh-autosuggestions"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load
# }}}

### Global {{{

# functions {{{
run_if_script_exist() {
    if [[ -e $1 ]]; then
        source $1
    fi
}
# }}}

# set locale in case
if [[ -z $LANG ]]; then
    echo "Warning: \$LANG is not set in profile."
    export LANG="en_US.UTF-8"
    export LC_ALL="en_US.UTF-8"
fi

# load iterm2-shell-integration
run_if_script_exist $HOME/.iterm2_shell_integration.zsh

# }}}

### Key binding {{{
# use pattern in history search
bindkey "^R" history-incremental-pattern-search-backward
bindkey "^S" history-incremental-pattern-search-forward
bindkey '^K' history-substring-search-up
bindkey '^J' history-substring-search-down
#}}}

### Plugin Config {{{

# bullet-train
BULLETTRAIN_DIR_EXTENDED=2
BULLETTRAIN_PROMPT_ORDER=(
  status
  time
  dir
  git
)
BULLETTRAIN_PROMPT_CHAR=$(iterm2_prompt_mark)\$

#}}}

### Environment {{{
export EDITOR="vim"
# }}}

### History {{{
HISTFILE=~/.zsh_history
HISTSIZE=20000
SAVEHIST=20000
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt share_history
# }}}

### PATH {{{
# add script dir
export PATH="$PATH:$HOME/scripts"

# add basictex path
export PATH="$PATH:/usr/local/texlive/2016basic/bin/universal-darwin"

# Homebrew
if [[ -e /usr/local/bin/brew ]]; then
    # add brew bin path
    export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

    # set root Application as default target
    export HOMEBREW_CASK_OPTS="--appdir=/Applications"

    # set ustc as alternative repo
    export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
fi

# Basher
# add basher bin path no matter if basher is installed
export PATH="$HOME/.basher/bin:$PATH"
if hash basher &>/dev/null; then
    # initialize basher
    eval "$(basher init -)"
fi

# fzf
run_if_script_exist $HOME/.fzf.zsh

# ops(author: mingming.xumm)
export OPS_HOME=/Users/dingye/ops
export PATH=/Users/dingye/ops:$PATH

# Virtualenv Loading
run_if_script_exist $HOME/.virtualenv_profile
# }}}

### Alias {{{
# Regular Alias
alias -r ls="ls -FG"
alias -r ll="ls -lAhFG"
alias -r la="ls -aTlFGh"
alias -r lr="ls -Rlh"
alias -r lR="ls -RAlh"
alias -r diff="diff -u"
alias -r stat="stat -x"

# Git Alias
alias -r gd="git diff"
alias -r gds="git diff --staged"

# Less Alias
alias -r less="less -i" # case-insensitive

# Tig Alias
alias -r tia="tig --all"
alias -r tis="tig status"

# Global Alias
alias -g /J='| jq .'
alias -g /L='| less'
alias -g /H='| head'
alias -g /T='| tail'
alias -g /G='| grep'
alias -g /A="&& terminal-notifier -message 'done'"

# Fixture Alias
alias -r ssh="TERM=xterm ssh"

# Misc
if which gdu &>/dev/null; then
    alias du="gdu"
fi

# Docker
drun() {
    docker run -it $1 /bin/bash
}

dexec() {
    docker exec -it $1 /bin/bash
}

# VSCode
function code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $*; }
# }}}

### Utils {{{

# Insert Unicode Character
autoload insert-unicode-char
zle -N insert-unicode-char
bindkey '^Xi' insert-unicode-char

# Load Utils Scripts
if [[ -d $HOME/extensions ]]; then
    for f in $(find -L $HOME/extensions -type f -name '*.sh')
    do
        source $f
    done
fi
# }}}

### App Init {{{

# Docker (for mac only)
if hash docker-machine &>/dev/null; then
    if [[ $(docker-machine status default 2>/dev/null) == "Running" ]]; then
        eval "$(docker-machine env default)"
    fi
fi

# fasd
if hash fasd &>/dev/null; then
    eval "$(fasd --init auto)"
    v() {
        vim $(fasd -sif $1)
    }
fi

# thefuck
if hash thefuck &>/dev/null; then
    eval "$(thefuck --alias)"
fi

# GPG
if hash gpg &>/dev/null; then
    GPG_TTY=$(tty)
    export GPG_TTY
fi

# }}}

### Extra Config {{{
if [[ -d $HOME/.shrc_d ]]; then
    for rc in $HOME/.shrc_d/*
    do
        if [[ -f $rc ]]; then
            . $rc
        fi
    done
fi
# }}}

# vim: set foldmarker={{{,}}} foldlevel=0 foldmethod=marker spell:
